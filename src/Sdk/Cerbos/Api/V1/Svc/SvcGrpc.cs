// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: cerbos/svc/v1/svc.proto
// </auto-generated>
// Original file comments:
// Copyright 2021-2025 Zenauth Ltd.
// SPDX-License-Identifier: Apache-2.0
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Cerbos.Api.V1.Svc {
  public static partial class CerbosService
  {
    static readonly string __ServiceName = "cerbos.svc.v1.CerbosService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cerbos.Api.V1.Request.CheckResourceSetRequest> __Marshaller_cerbos_request_v1_CheckResourceSetRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cerbos.Api.V1.Request.CheckResourceSetRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cerbos.Api.V1.Response.CheckResourceSetResponse> __Marshaller_cerbos_response_v1_CheckResourceSetResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cerbos.Api.V1.Response.CheckResourceSetResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cerbos.Api.V1.Request.CheckResourceBatchRequest> __Marshaller_cerbos_request_v1_CheckResourceBatchRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cerbos.Api.V1.Request.CheckResourceBatchRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cerbos.Api.V1.Response.CheckResourceBatchResponse> __Marshaller_cerbos_response_v1_CheckResourceBatchResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cerbos.Api.V1.Response.CheckResourceBatchResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cerbos.Api.V1.Request.CheckResourcesRequest> __Marshaller_cerbos_request_v1_CheckResourcesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cerbos.Api.V1.Request.CheckResourcesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cerbos.Api.V1.Response.CheckResourcesResponse> __Marshaller_cerbos_response_v1_CheckResourcesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cerbos.Api.V1.Response.CheckResourcesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cerbos.Api.V1.Request.ServerInfoRequest> __Marshaller_cerbos_request_v1_ServerInfoRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cerbos.Api.V1.Request.ServerInfoRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cerbos.Api.V1.Response.ServerInfoResponse> __Marshaller_cerbos_response_v1_ServerInfoResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cerbos.Api.V1.Response.ServerInfoResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cerbos.Api.V1.Request.PlanResourcesRequest> __Marshaller_cerbos_request_v1_PlanResourcesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cerbos.Api.V1.Request.PlanResourcesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cerbos.Api.V1.Response.PlanResourcesResponse> __Marshaller_cerbos_response_v1_PlanResourcesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cerbos.Api.V1.Response.PlanResourcesResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cerbos.Api.V1.Request.CheckResourceSetRequest, global::Cerbos.Api.V1.Response.CheckResourceSetResponse> __Method_CheckResourceSet = new grpc::Method<global::Cerbos.Api.V1.Request.CheckResourceSetRequest, global::Cerbos.Api.V1.Response.CheckResourceSetResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CheckResourceSet",
        __Marshaller_cerbos_request_v1_CheckResourceSetRequest,
        __Marshaller_cerbos_response_v1_CheckResourceSetResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cerbos.Api.V1.Request.CheckResourceBatchRequest, global::Cerbos.Api.V1.Response.CheckResourceBatchResponse> __Method_CheckResourceBatch = new grpc::Method<global::Cerbos.Api.V1.Request.CheckResourceBatchRequest, global::Cerbos.Api.V1.Response.CheckResourceBatchResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CheckResourceBatch",
        __Marshaller_cerbos_request_v1_CheckResourceBatchRequest,
        __Marshaller_cerbos_response_v1_CheckResourceBatchResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cerbos.Api.V1.Request.CheckResourcesRequest, global::Cerbos.Api.V1.Response.CheckResourcesResponse> __Method_CheckResources = new grpc::Method<global::Cerbos.Api.V1.Request.CheckResourcesRequest, global::Cerbos.Api.V1.Response.CheckResourcesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CheckResources",
        __Marshaller_cerbos_request_v1_CheckResourcesRequest,
        __Marshaller_cerbos_response_v1_CheckResourcesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cerbos.Api.V1.Request.ServerInfoRequest, global::Cerbos.Api.V1.Response.ServerInfoResponse> __Method_ServerInfo = new grpc::Method<global::Cerbos.Api.V1.Request.ServerInfoRequest, global::Cerbos.Api.V1.Response.ServerInfoResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ServerInfo",
        __Marshaller_cerbos_request_v1_ServerInfoRequest,
        __Marshaller_cerbos_response_v1_ServerInfoResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cerbos.Api.V1.Request.PlanResourcesRequest, global::Cerbos.Api.V1.Response.PlanResourcesResponse> __Method_PlanResources = new grpc::Method<global::Cerbos.Api.V1.Request.PlanResourcesRequest, global::Cerbos.Api.V1.Response.PlanResourcesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PlanResources",
        __Marshaller_cerbos_request_v1_PlanResourcesRequest,
        __Marshaller_cerbos_response_v1_PlanResourcesResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Cerbos.Api.V1.Svc.SvcReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of CerbosService</summary>
    [grpc::BindServiceMethod(typeof(CerbosService), "BindService")]
    public abstract partial class CerbosServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cerbos.Api.V1.Response.CheckResourceSetResponse> CheckResourceSet(global::Cerbos.Api.V1.Request.CheckResourceSetRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cerbos.Api.V1.Response.CheckResourceBatchResponse> CheckResourceBatch(global::Cerbos.Api.V1.Request.CheckResourceBatchRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cerbos.Api.V1.Response.CheckResourcesResponse> CheckResources(global::Cerbos.Api.V1.Request.CheckResourcesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cerbos.Api.V1.Response.ServerInfoResponse> ServerInfo(global::Cerbos.Api.V1.Request.ServerInfoRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cerbos.Api.V1.Response.PlanResourcesResponse> PlanResources(global::Cerbos.Api.V1.Request.PlanResourcesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for CerbosService</summary>
    public partial class CerbosServiceClient : grpc::ClientBase<CerbosServiceClient>
    {
      /// <summary>Creates a new client for CerbosService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public CerbosServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for CerbosService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public CerbosServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected CerbosServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected CerbosServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cerbos.Api.V1.Response.CheckResourceSetResponse CheckResourceSet(global::Cerbos.Api.V1.Request.CheckResourceSetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CheckResourceSet(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cerbos.Api.V1.Response.CheckResourceSetResponse CheckResourceSet(global::Cerbos.Api.V1.Request.CheckResourceSetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CheckResourceSet, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cerbos.Api.V1.Response.CheckResourceSetResponse> CheckResourceSetAsync(global::Cerbos.Api.V1.Request.CheckResourceSetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CheckResourceSetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cerbos.Api.V1.Response.CheckResourceSetResponse> CheckResourceSetAsync(global::Cerbos.Api.V1.Request.CheckResourceSetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CheckResourceSet, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cerbos.Api.V1.Response.CheckResourceBatchResponse CheckResourceBatch(global::Cerbos.Api.V1.Request.CheckResourceBatchRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CheckResourceBatch(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cerbos.Api.V1.Response.CheckResourceBatchResponse CheckResourceBatch(global::Cerbos.Api.V1.Request.CheckResourceBatchRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CheckResourceBatch, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cerbos.Api.V1.Response.CheckResourceBatchResponse> CheckResourceBatchAsync(global::Cerbos.Api.V1.Request.CheckResourceBatchRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CheckResourceBatchAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cerbos.Api.V1.Response.CheckResourceBatchResponse> CheckResourceBatchAsync(global::Cerbos.Api.V1.Request.CheckResourceBatchRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CheckResourceBatch, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cerbos.Api.V1.Response.CheckResourcesResponse CheckResources(global::Cerbos.Api.V1.Request.CheckResourcesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CheckResources(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cerbos.Api.V1.Response.CheckResourcesResponse CheckResources(global::Cerbos.Api.V1.Request.CheckResourcesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CheckResources, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cerbos.Api.V1.Response.CheckResourcesResponse> CheckResourcesAsync(global::Cerbos.Api.V1.Request.CheckResourcesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CheckResourcesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cerbos.Api.V1.Response.CheckResourcesResponse> CheckResourcesAsync(global::Cerbos.Api.V1.Request.CheckResourcesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CheckResources, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cerbos.Api.V1.Response.ServerInfoResponse ServerInfo(global::Cerbos.Api.V1.Request.ServerInfoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ServerInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cerbos.Api.V1.Response.ServerInfoResponse ServerInfo(global::Cerbos.Api.V1.Request.ServerInfoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ServerInfo, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cerbos.Api.V1.Response.ServerInfoResponse> ServerInfoAsync(global::Cerbos.Api.V1.Request.ServerInfoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ServerInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cerbos.Api.V1.Response.ServerInfoResponse> ServerInfoAsync(global::Cerbos.Api.V1.Request.ServerInfoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ServerInfo, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cerbos.Api.V1.Response.PlanResourcesResponse PlanResources(global::Cerbos.Api.V1.Request.PlanResourcesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PlanResources(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cerbos.Api.V1.Response.PlanResourcesResponse PlanResources(global::Cerbos.Api.V1.Request.PlanResourcesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PlanResources, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cerbos.Api.V1.Response.PlanResourcesResponse> PlanResourcesAsync(global::Cerbos.Api.V1.Request.PlanResourcesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PlanResourcesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cerbos.Api.V1.Response.PlanResourcesResponse> PlanResourcesAsync(global::Cerbos.Api.V1.Request.PlanResourcesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PlanResources, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override CerbosServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new CerbosServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(CerbosServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CheckResourceSet, serviceImpl.CheckResourceSet)
          .AddMethod(__Method_CheckResourceBatch, serviceImpl.CheckResourceBatch)
          .AddMethod(__Method_CheckResources, serviceImpl.CheckResources)
          .AddMethod(__Method_ServerInfo, serviceImpl.ServerInfo)
          .AddMethod(__Method_PlanResources, serviceImpl.PlanResources).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, CerbosServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CheckResourceSet, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cerbos.Api.V1.Request.CheckResourceSetRequest, global::Cerbos.Api.V1.Response.CheckResourceSetResponse>(serviceImpl.CheckResourceSet));
      serviceBinder.AddMethod(__Method_CheckResourceBatch, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cerbos.Api.V1.Request.CheckResourceBatchRequest, global::Cerbos.Api.V1.Response.CheckResourceBatchResponse>(serviceImpl.CheckResourceBatch));
      serviceBinder.AddMethod(__Method_CheckResources, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cerbos.Api.V1.Request.CheckResourcesRequest, global::Cerbos.Api.V1.Response.CheckResourcesResponse>(serviceImpl.CheckResources));
      serviceBinder.AddMethod(__Method_ServerInfo, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cerbos.Api.V1.Request.ServerInfoRequest, global::Cerbos.Api.V1.Response.ServerInfoResponse>(serviceImpl.ServerInfo));
      serviceBinder.AddMethod(__Method_PlanResources, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cerbos.Api.V1.Request.PlanResourcesRequest, global::Cerbos.Api.V1.Response.PlanResourcesResponse>(serviceImpl.PlanResources));
    }

  }
  public static partial class CerbosAdminService
  {
    static readonly string __ServiceName = "cerbos.svc.v1.CerbosAdminService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cerbos.Api.V1.Request.AddOrUpdatePolicyRequest> __Marshaller_cerbos_request_v1_AddOrUpdatePolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cerbos.Api.V1.Request.AddOrUpdatePolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cerbos.Api.V1.Response.AddOrUpdatePolicyResponse> __Marshaller_cerbos_response_v1_AddOrUpdatePolicyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cerbos.Api.V1.Response.AddOrUpdatePolicyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cerbos.Api.V1.Request.InspectPoliciesRequest> __Marshaller_cerbos_request_v1_InspectPoliciesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cerbos.Api.V1.Request.InspectPoliciesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cerbos.Api.V1.Response.InspectPoliciesResponse> __Marshaller_cerbos_response_v1_InspectPoliciesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cerbos.Api.V1.Response.InspectPoliciesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cerbos.Api.V1.Request.ListPoliciesRequest> __Marshaller_cerbos_request_v1_ListPoliciesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cerbos.Api.V1.Request.ListPoliciesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cerbos.Api.V1.Response.ListPoliciesResponse> __Marshaller_cerbos_response_v1_ListPoliciesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cerbos.Api.V1.Response.ListPoliciesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cerbos.Api.V1.Request.GetPolicyRequest> __Marshaller_cerbos_request_v1_GetPolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cerbos.Api.V1.Request.GetPolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cerbos.Api.V1.Response.GetPolicyResponse> __Marshaller_cerbos_response_v1_GetPolicyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cerbos.Api.V1.Response.GetPolicyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cerbos.Api.V1.Request.DisablePolicyRequest> __Marshaller_cerbos_request_v1_DisablePolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cerbos.Api.V1.Request.DisablePolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cerbos.Api.V1.Response.DisablePolicyResponse> __Marshaller_cerbos_response_v1_DisablePolicyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cerbos.Api.V1.Response.DisablePolicyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cerbos.Api.V1.Request.EnablePolicyRequest> __Marshaller_cerbos_request_v1_EnablePolicyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cerbos.Api.V1.Request.EnablePolicyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cerbos.Api.V1.Response.EnablePolicyResponse> __Marshaller_cerbos_response_v1_EnablePolicyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cerbos.Api.V1.Response.EnablePolicyResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cerbos.Api.V1.Request.ListAuditLogEntriesRequest> __Marshaller_cerbos_request_v1_ListAuditLogEntriesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cerbos.Api.V1.Request.ListAuditLogEntriesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cerbos.Api.V1.Response.ListAuditLogEntriesResponse> __Marshaller_cerbos_response_v1_ListAuditLogEntriesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cerbos.Api.V1.Response.ListAuditLogEntriesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cerbos.Api.V1.Request.AddOrUpdateSchemaRequest> __Marshaller_cerbos_request_v1_AddOrUpdateSchemaRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cerbos.Api.V1.Request.AddOrUpdateSchemaRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cerbos.Api.V1.Response.AddOrUpdateSchemaResponse> __Marshaller_cerbos_response_v1_AddOrUpdateSchemaResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cerbos.Api.V1.Response.AddOrUpdateSchemaResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cerbos.Api.V1.Request.ListSchemasRequest> __Marshaller_cerbos_request_v1_ListSchemasRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cerbos.Api.V1.Request.ListSchemasRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cerbos.Api.V1.Response.ListSchemasResponse> __Marshaller_cerbos_response_v1_ListSchemasResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cerbos.Api.V1.Response.ListSchemasResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cerbos.Api.V1.Request.GetSchemaRequest> __Marshaller_cerbos_request_v1_GetSchemaRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cerbos.Api.V1.Request.GetSchemaRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cerbos.Api.V1.Response.GetSchemaResponse> __Marshaller_cerbos_response_v1_GetSchemaResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cerbos.Api.V1.Response.GetSchemaResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cerbos.Api.V1.Request.DeleteSchemaRequest> __Marshaller_cerbos_request_v1_DeleteSchemaRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cerbos.Api.V1.Request.DeleteSchemaRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cerbos.Api.V1.Response.DeleteSchemaResponse> __Marshaller_cerbos_response_v1_DeleteSchemaResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cerbos.Api.V1.Response.DeleteSchemaResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cerbos.Api.V1.Request.ReloadStoreRequest> __Marshaller_cerbos_request_v1_ReloadStoreRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cerbos.Api.V1.Request.ReloadStoreRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cerbos.Api.V1.Response.ReloadStoreResponse> __Marshaller_cerbos_response_v1_ReloadStoreResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cerbos.Api.V1.Response.ReloadStoreResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cerbos.Api.V1.Request.AddOrUpdatePolicyRequest, global::Cerbos.Api.V1.Response.AddOrUpdatePolicyResponse> __Method_AddOrUpdatePolicy = new grpc::Method<global::Cerbos.Api.V1.Request.AddOrUpdatePolicyRequest, global::Cerbos.Api.V1.Response.AddOrUpdatePolicyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddOrUpdatePolicy",
        __Marshaller_cerbos_request_v1_AddOrUpdatePolicyRequest,
        __Marshaller_cerbos_response_v1_AddOrUpdatePolicyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cerbos.Api.V1.Request.InspectPoliciesRequest, global::Cerbos.Api.V1.Response.InspectPoliciesResponse> __Method_InspectPolicies = new grpc::Method<global::Cerbos.Api.V1.Request.InspectPoliciesRequest, global::Cerbos.Api.V1.Response.InspectPoliciesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "InspectPolicies",
        __Marshaller_cerbos_request_v1_InspectPoliciesRequest,
        __Marshaller_cerbos_response_v1_InspectPoliciesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cerbos.Api.V1.Request.ListPoliciesRequest, global::Cerbos.Api.V1.Response.ListPoliciesResponse> __Method_ListPolicies = new grpc::Method<global::Cerbos.Api.V1.Request.ListPoliciesRequest, global::Cerbos.Api.V1.Response.ListPoliciesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListPolicies",
        __Marshaller_cerbos_request_v1_ListPoliciesRequest,
        __Marshaller_cerbos_response_v1_ListPoliciesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cerbos.Api.V1.Request.GetPolicyRequest, global::Cerbos.Api.V1.Response.GetPolicyResponse> __Method_GetPolicy = new grpc::Method<global::Cerbos.Api.V1.Request.GetPolicyRequest, global::Cerbos.Api.V1.Response.GetPolicyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetPolicy",
        __Marshaller_cerbos_request_v1_GetPolicyRequest,
        __Marshaller_cerbos_response_v1_GetPolicyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cerbos.Api.V1.Request.DisablePolicyRequest, global::Cerbos.Api.V1.Response.DisablePolicyResponse> __Method_DisablePolicy = new grpc::Method<global::Cerbos.Api.V1.Request.DisablePolicyRequest, global::Cerbos.Api.V1.Response.DisablePolicyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DisablePolicy",
        __Marshaller_cerbos_request_v1_DisablePolicyRequest,
        __Marshaller_cerbos_response_v1_DisablePolicyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cerbos.Api.V1.Request.EnablePolicyRequest, global::Cerbos.Api.V1.Response.EnablePolicyResponse> __Method_EnablePolicy = new grpc::Method<global::Cerbos.Api.V1.Request.EnablePolicyRequest, global::Cerbos.Api.V1.Response.EnablePolicyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "EnablePolicy",
        __Marshaller_cerbos_request_v1_EnablePolicyRequest,
        __Marshaller_cerbos_response_v1_EnablePolicyResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cerbos.Api.V1.Request.ListAuditLogEntriesRequest, global::Cerbos.Api.V1.Response.ListAuditLogEntriesResponse> __Method_ListAuditLogEntries = new grpc::Method<global::Cerbos.Api.V1.Request.ListAuditLogEntriesRequest, global::Cerbos.Api.V1.Response.ListAuditLogEntriesResponse>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "ListAuditLogEntries",
        __Marshaller_cerbos_request_v1_ListAuditLogEntriesRequest,
        __Marshaller_cerbos_response_v1_ListAuditLogEntriesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cerbos.Api.V1.Request.AddOrUpdateSchemaRequest, global::Cerbos.Api.V1.Response.AddOrUpdateSchemaResponse> __Method_AddOrUpdateSchema = new grpc::Method<global::Cerbos.Api.V1.Request.AddOrUpdateSchemaRequest, global::Cerbos.Api.V1.Response.AddOrUpdateSchemaResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddOrUpdateSchema",
        __Marshaller_cerbos_request_v1_AddOrUpdateSchemaRequest,
        __Marshaller_cerbos_response_v1_AddOrUpdateSchemaResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cerbos.Api.V1.Request.ListSchemasRequest, global::Cerbos.Api.V1.Response.ListSchemasResponse> __Method_ListSchemas = new grpc::Method<global::Cerbos.Api.V1.Request.ListSchemasRequest, global::Cerbos.Api.V1.Response.ListSchemasResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListSchemas",
        __Marshaller_cerbos_request_v1_ListSchemasRequest,
        __Marshaller_cerbos_response_v1_ListSchemasResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cerbos.Api.V1.Request.GetSchemaRequest, global::Cerbos.Api.V1.Response.GetSchemaResponse> __Method_GetSchema = new grpc::Method<global::Cerbos.Api.V1.Request.GetSchemaRequest, global::Cerbos.Api.V1.Response.GetSchemaResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSchema",
        __Marshaller_cerbos_request_v1_GetSchemaRequest,
        __Marshaller_cerbos_response_v1_GetSchemaResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cerbos.Api.V1.Request.DeleteSchemaRequest, global::Cerbos.Api.V1.Response.DeleteSchemaResponse> __Method_DeleteSchema = new grpc::Method<global::Cerbos.Api.V1.Request.DeleteSchemaRequest, global::Cerbos.Api.V1.Response.DeleteSchemaResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteSchema",
        __Marshaller_cerbos_request_v1_DeleteSchemaRequest,
        __Marshaller_cerbos_response_v1_DeleteSchemaResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cerbos.Api.V1.Request.ReloadStoreRequest, global::Cerbos.Api.V1.Response.ReloadStoreResponse> __Method_ReloadStore = new grpc::Method<global::Cerbos.Api.V1.Request.ReloadStoreRequest, global::Cerbos.Api.V1.Response.ReloadStoreResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ReloadStore",
        __Marshaller_cerbos_request_v1_ReloadStoreRequest,
        __Marshaller_cerbos_response_v1_ReloadStoreResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Cerbos.Api.V1.Svc.SvcReflection.Descriptor.Services[1]; }
    }

    /// <summary>Base class for server-side implementations of CerbosAdminService</summary>
    [grpc::BindServiceMethod(typeof(CerbosAdminService), "BindService")]
    public abstract partial class CerbosAdminServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cerbos.Api.V1.Response.AddOrUpdatePolicyResponse> AddOrUpdatePolicy(global::Cerbos.Api.V1.Request.AddOrUpdatePolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cerbos.Api.V1.Response.InspectPoliciesResponse> InspectPolicies(global::Cerbos.Api.V1.Request.InspectPoliciesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cerbos.Api.V1.Response.ListPoliciesResponse> ListPolicies(global::Cerbos.Api.V1.Request.ListPoliciesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cerbos.Api.V1.Response.GetPolicyResponse> GetPolicy(global::Cerbos.Api.V1.Request.GetPolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cerbos.Api.V1.Response.DisablePolicyResponse> DisablePolicy(global::Cerbos.Api.V1.Request.DisablePolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cerbos.Api.V1.Response.EnablePolicyResponse> EnablePolicy(global::Cerbos.Api.V1.Request.EnablePolicyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task ListAuditLogEntries(global::Cerbos.Api.V1.Request.ListAuditLogEntriesRequest request, grpc::IServerStreamWriter<global::Cerbos.Api.V1.Response.ListAuditLogEntriesResponse> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cerbos.Api.V1.Response.AddOrUpdateSchemaResponse> AddOrUpdateSchema(global::Cerbos.Api.V1.Request.AddOrUpdateSchemaRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cerbos.Api.V1.Response.ListSchemasResponse> ListSchemas(global::Cerbos.Api.V1.Request.ListSchemasRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cerbos.Api.V1.Response.GetSchemaResponse> GetSchema(global::Cerbos.Api.V1.Request.GetSchemaRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cerbos.Api.V1.Response.DeleteSchemaResponse> DeleteSchema(global::Cerbos.Api.V1.Request.DeleteSchemaRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cerbos.Api.V1.Response.ReloadStoreResponse> ReloadStore(global::Cerbos.Api.V1.Request.ReloadStoreRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for CerbosAdminService</summary>
    public partial class CerbosAdminServiceClient : grpc::ClientBase<CerbosAdminServiceClient>
    {
      /// <summary>Creates a new client for CerbosAdminService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public CerbosAdminServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for CerbosAdminService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public CerbosAdminServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected CerbosAdminServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected CerbosAdminServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cerbos.Api.V1.Response.AddOrUpdatePolicyResponse AddOrUpdatePolicy(global::Cerbos.Api.V1.Request.AddOrUpdatePolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddOrUpdatePolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cerbos.Api.V1.Response.AddOrUpdatePolicyResponse AddOrUpdatePolicy(global::Cerbos.Api.V1.Request.AddOrUpdatePolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddOrUpdatePolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cerbos.Api.V1.Response.AddOrUpdatePolicyResponse> AddOrUpdatePolicyAsync(global::Cerbos.Api.V1.Request.AddOrUpdatePolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddOrUpdatePolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cerbos.Api.V1.Response.AddOrUpdatePolicyResponse> AddOrUpdatePolicyAsync(global::Cerbos.Api.V1.Request.AddOrUpdatePolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddOrUpdatePolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cerbos.Api.V1.Response.InspectPoliciesResponse InspectPolicies(global::Cerbos.Api.V1.Request.InspectPoliciesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InspectPolicies(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cerbos.Api.V1.Response.InspectPoliciesResponse InspectPolicies(global::Cerbos.Api.V1.Request.InspectPoliciesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_InspectPolicies, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cerbos.Api.V1.Response.InspectPoliciesResponse> InspectPoliciesAsync(global::Cerbos.Api.V1.Request.InspectPoliciesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return InspectPoliciesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cerbos.Api.V1.Response.InspectPoliciesResponse> InspectPoliciesAsync(global::Cerbos.Api.V1.Request.InspectPoliciesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_InspectPolicies, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cerbos.Api.V1.Response.ListPoliciesResponse ListPolicies(global::Cerbos.Api.V1.Request.ListPoliciesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListPolicies(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cerbos.Api.V1.Response.ListPoliciesResponse ListPolicies(global::Cerbos.Api.V1.Request.ListPoliciesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListPolicies, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cerbos.Api.V1.Response.ListPoliciesResponse> ListPoliciesAsync(global::Cerbos.Api.V1.Request.ListPoliciesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListPoliciesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cerbos.Api.V1.Response.ListPoliciesResponse> ListPoliciesAsync(global::Cerbos.Api.V1.Request.ListPoliciesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListPolicies, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cerbos.Api.V1.Response.GetPolicyResponse GetPolicy(global::Cerbos.Api.V1.Request.GetPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cerbos.Api.V1.Response.GetPolicyResponse GetPolicy(global::Cerbos.Api.V1.Request.GetPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cerbos.Api.V1.Response.GetPolicyResponse> GetPolicyAsync(global::Cerbos.Api.V1.Request.GetPolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetPolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cerbos.Api.V1.Response.GetPolicyResponse> GetPolicyAsync(global::Cerbos.Api.V1.Request.GetPolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetPolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cerbos.Api.V1.Response.DisablePolicyResponse DisablePolicy(global::Cerbos.Api.V1.Request.DisablePolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DisablePolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cerbos.Api.V1.Response.DisablePolicyResponse DisablePolicy(global::Cerbos.Api.V1.Request.DisablePolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DisablePolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cerbos.Api.V1.Response.DisablePolicyResponse> DisablePolicyAsync(global::Cerbos.Api.V1.Request.DisablePolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DisablePolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cerbos.Api.V1.Response.DisablePolicyResponse> DisablePolicyAsync(global::Cerbos.Api.V1.Request.DisablePolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DisablePolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cerbos.Api.V1.Response.EnablePolicyResponse EnablePolicy(global::Cerbos.Api.V1.Request.EnablePolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return EnablePolicy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cerbos.Api.V1.Response.EnablePolicyResponse EnablePolicy(global::Cerbos.Api.V1.Request.EnablePolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_EnablePolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cerbos.Api.V1.Response.EnablePolicyResponse> EnablePolicyAsync(global::Cerbos.Api.V1.Request.EnablePolicyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return EnablePolicyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cerbos.Api.V1.Response.EnablePolicyResponse> EnablePolicyAsync(global::Cerbos.Api.V1.Request.EnablePolicyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_EnablePolicy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Cerbos.Api.V1.Response.ListAuditLogEntriesResponse> ListAuditLogEntries(global::Cerbos.Api.V1.Request.ListAuditLogEntriesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAuditLogEntries(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncServerStreamingCall<global::Cerbos.Api.V1.Response.ListAuditLogEntriesResponse> ListAuditLogEntries(global::Cerbos.Api.V1.Request.ListAuditLogEntriesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncServerStreamingCall(__Method_ListAuditLogEntries, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cerbos.Api.V1.Response.AddOrUpdateSchemaResponse AddOrUpdateSchema(global::Cerbos.Api.V1.Request.AddOrUpdateSchemaRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddOrUpdateSchema(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cerbos.Api.V1.Response.AddOrUpdateSchemaResponse AddOrUpdateSchema(global::Cerbos.Api.V1.Request.AddOrUpdateSchemaRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddOrUpdateSchema, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cerbos.Api.V1.Response.AddOrUpdateSchemaResponse> AddOrUpdateSchemaAsync(global::Cerbos.Api.V1.Request.AddOrUpdateSchemaRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddOrUpdateSchemaAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cerbos.Api.V1.Response.AddOrUpdateSchemaResponse> AddOrUpdateSchemaAsync(global::Cerbos.Api.V1.Request.AddOrUpdateSchemaRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddOrUpdateSchema, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cerbos.Api.V1.Response.ListSchemasResponse ListSchemas(global::Cerbos.Api.V1.Request.ListSchemasRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListSchemas(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cerbos.Api.V1.Response.ListSchemasResponse ListSchemas(global::Cerbos.Api.V1.Request.ListSchemasRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListSchemas, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cerbos.Api.V1.Response.ListSchemasResponse> ListSchemasAsync(global::Cerbos.Api.V1.Request.ListSchemasRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListSchemasAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cerbos.Api.V1.Response.ListSchemasResponse> ListSchemasAsync(global::Cerbos.Api.V1.Request.ListSchemasRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListSchemas, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cerbos.Api.V1.Response.GetSchemaResponse GetSchema(global::Cerbos.Api.V1.Request.GetSchemaRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSchema(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cerbos.Api.V1.Response.GetSchemaResponse GetSchema(global::Cerbos.Api.V1.Request.GetSchemaRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetSchema, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cerbos.Api.V1.Response.GetSchemaResponse> GetSchemaAsync(global::Cerbos.Api.V1.Request.GetSchemaRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSchemaAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cerbos.Api.V1.Response.GetSchemaResponse> GetSchemaAsync(global::Cerbos.Api.V1.Request.GetSchemaRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetSchema, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cerbos.Api.V1.Response.DeleteSchemaResponse DeleteSchema(global::Cerbos.Api.V1.Request.DeleteSchemaRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteSchema(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cerbos.Api.V1.Response.DeleteSchemaResponse DeleteSchema(global::Cerbos.Api.V1.Request.DeleteSchemaRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteSchema, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cerbos.Api.V1.Response.DeleteSchemaResponse> DeleteSchemaAsync(global::Cerbos.Api.V1.Request.DeleteSchemaRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteSchemaAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cerbos.Api.V1.Response.DeleteSchemaResponse> DeleteSchemaAsync(global::Cerbos.Api.V1.Request.DeleteSchemaRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteSchema, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cerbos.Api.V1.Response.ReloadStoreResponse ReloadStore(global::Cerbos.Api.V1.Request.ReloadStoreRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReloadStore(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cerbos.Api.V1.Response.ReloadStoreResponse ReloadStore(global::Cerbos.Api.V1.Request.ReloadStoreRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ReloadStore, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cerbos.Api.V1.Response.ReloadStoreResponse> ReloadStoreAsync(global::Cerbos.Api.V1.Request.ReloadStoreRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ReloadStoreAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cerbos.Api.V1.Response.ReloadStoreResponse> ReloadStoreAsync(global::Cerbos.Api.V1.Request.ReloadStoreRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ReloadStore, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override CerbosAdminServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new CerbosAdminServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(CerbosAdminServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_AddOrUpdatePolicy, serviceImpl.AddOrUpdatePolicy)
          .AddMethod(__Method_InspectPolicies, serviceImpl.InspectPolicies)
          .AddMethod(__Method_ListPolicies, serviceImpl.ListPolicies)
          .AddMethod(__Method_GetPolicy, serviceImpl.GetPolicy)
          .AddMethod(__Method_DisablePolicy, serviceImpl.DisablePolicy)
          .AddMethod(__Method_EnablePolicy, serviceImpl.EnablePolicy)
          .AddMethod(__Method_ListAuditLogEntries, serviceImpl.ListAuditLogEntries)
          .AddMethod(__Method_AddOrUpdateSchema, serviceImpl.AddOrUpdateSchema)
          .AddMethod(__Method_ListSchemas, serviceImpl.ListSchemas)
          .AddMethod(__Method_GetSchema, serviceImpl.GetSchema)
          .AddMethod(__Method_DeleteSchema, serviceImpl.DeleteSchema)
          .AddMethod(__Method_ReloadStore, serviceImpl.ReloadStore).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, CerbosAdminServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_AddOrUpdatePolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cerbos.Api.V1.Request.AddOrUpdatePolicyRequest, global::Cerbos.Api.V1.Response.AddOrUpdatePolicyResponse>(serviceImpl.AddOrUpdatePolicy));
      serviceBinder.AddMethod(__Method_InspectPolicies, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cerbos.Api.V1.Request.InspectPoliciesRequest, global::Cerbos.Api.V1.Response.InspectPoliciesResponse>(serviceImpl.InspectPolicies));
      serviceBinder.AddMethod(__Method_ListPolicies, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cerbos.Api.V1.Request.ListPoliciesRequest, global::Cerbos.Api.V1.Response.ListPoliciesResponse>(serviceImpl.ListPolicies));
      serviceBinder.AddMethod(__Method_GetPolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cerbos.Api.V1.Request.GetPolicyRequest, global::Cerbos.Api.V1.Response.GetPolicyResponse>(serviceImpl.GetPolicy));
      serviceBinder.AddMethod(__Method_DisablePolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cerbos.Api.V1.Request.DisablePolicyRequest, global::Cerbos.Api.V1.Response.DisablePolicyResponse>(serviceImpl.DisablePolicy));
      serviceBinder.AddMethod(__Method_EnablePolicy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cerbos.Api.V1.Request.EnablePolicyRequest, global::Cerbos.Api.V1.Response.EnablePolicyResponse>(serviceImpl.EnablePolicy));
      serviceBinder.AddMethod(__Method_ListAuditLogEntries, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::Cerbos.Api.V1.Request.ListAuditLogEntriesRequest, global::Cerbos.Api.V1.Response.ListAuditLogEntriesResponse>(serviceImpl.ListAuditLogEntries));
      serviceBinder.AddMethod(__Method_AddOrUpdateSchema, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cerbos.Api.V1.Request.AddOrUpdateSchemaRequest, global::Cerbos.Api.V1.Response.AddOrUpdateSchemaResponse>(serviceImpl.AddOrUpdateSchema));
      serviceBinder.AddMethod(__Method_ListSchemas, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cerbos.Api.V1.Request.ListSchemasRequest, global::Cerbos.Api.V1.Response.ListSchemasResponse>(serviceImpl.ListSchemas));
      serviceBinder.AddMethod(__Method_GetSchema, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cerbos.Api.V1.Request.GetSchemaRequest, global::Cerbos.Api.V1.Response.GetSchemaResponse>(serviceImpl.GetSchema));
      serviceBinder.AddMethod(__Method_DeleteSchema, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cerbos.Api.V1.Request.DeleteSchemaRequest, global::Cerbos.Api.V1.Response.DeleteSchemaResponse>(serviceImpl.DeleteSchema));
      serviceBinder.AddMethod(__Method_ReloadStore, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cerbos.Api.V1.Request.ReloadStoreRequest, global::Cerbos.Api.V1.Response.ReloadStoreResponse>(serviceImpl.ReloadStore));
    }

  }
  public static partial class CerbosPlaygroundService
  {
    static readonly string __ServiceName = "cerbos.svc.v1.CerbosPlaygroundService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cerbos.Api.V1.Request.PlaygroundValidateRequest> __Marshaller_cerbos_request_v1_PlaygroundValidateRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cerbos.Api.V1.Request.PlaygroundValidateRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cerbos.Api.V1.Response.PlaygroundValidateResponse> __Marshaller_cerbos_response_v1_PlaygroundValidateResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cerbos.Api.V1.Response.PlaygroundValidateResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cerbos.Api.V1.Request.PlaygroundTestRequest> __Marshaller_cerbos_request_v1_PlaygroundTestRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cerbos.Api.V1.Request.PlaygroundTestRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cerbos.Api.V1.Response.PlaygroundTestResponse> __Marshaller_cerbos_response_v1_PlaygroundTestResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cerbos.Api.V1.Response.PlaygroundTestResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cerbos.Api.V1.Request.PlaygroundEvaluateRequest> __Marshaller_cerbos_request_v1_PlaygroundEvaluateRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cerbos.Api.V1.Request.PlaygroundEvaluateRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cerbos.Api.V1.Response.PlaygroundEvaluateResponse> __Marshaller_cerbos_response_v1_PlaygroundEvaluateResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cerbos.Api.V1.Response.PlaygroundEvaluateResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cerbos.Api.V1.Request.PlaygroundProxyRequest> __Marshaller_cerbos_request_v1_PlaygroundProxyRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cerbos.Api.V1.Request.PlaygroundProxyRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cerbos.Api.V1.Response.PlaygroundProxyResponse> __Marshaller_cerbos_response_v1_PlaygroundProxyResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cerbos.Api.V1.Response.PlaygroundProxyResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cerbos.Api.V1.Request.PlaygroundValidateRequest, global::Cerbos.Api.V1.Response.PlaygroundValidateResponse> __Method_PlaygroundValidate = new grpc::Method<global::Cerbos.Api.V1.Request.PlaygroundValidateRequest, global::Cerbos.Api.V1.Response.PlaygroundValidateResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PlaygroundValidate",
        __Marshaller_cerbos_request_v1_PlaygroundValidateRequest,
        __Marshaller_cerbos_response_v1_PlaygroundValidateResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cerbos.Api.V1.Request.PlaygroundTestRequest, global::Cerbos.Api.V1.Response.PlaygroundTestResponse> __Method_PlaygroundTest = new grpc::Method<global::Cerbos.Api.V1.Request.PlaygroundTestRequest, global::Cerbos.Api.V1.Response.PlaygroundTestResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PlaygroundTest",
        __Marshaller_cerbos_request_v1_PlaygroundTestRequest,
        __Marshaller_cerbos_response_v1_PlaygroundTestResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cerbos.Api.V1.Request.PlaygroundEvaluateRequest, global::Cerbos.Api.V1.Response.PlaygroundEvaluateResponse> __Method_PlaygroundEvaluate = new grpc::Method<global::Cerbos.Api.V1.Request.PlaygroundEvaluateRequest, global::Cerbos.Api.V1.Response.PlaygroundEvaluateResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PlaygroundEvaluate",
        __Marshaller_cerbos_request_v1_PlaygroundEvaluateRequest,
        __Marshaller_cerbos_response_v1_PlaygroundEvaluateResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cerbos.Api.V1.Request.PlaygroundProxyRequest, global::Cerbos.Api.V1.Response.PlaygroundProxyResponse> __Method_PlaygroundProxy = new grpc::Method<global::Cerbos.Api.V1.Request.PlaygroundProxyRequest, global::Cerbos.Api.V1.Response.PlaygroundProxyResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PlaygroundProxy",
        __Marshaller_cerbos_request_v1_PlaygroundProxyRequest,
        __Marshaller_cerbos_response_v1_PlaygroundProxyResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Cerbos.Api.V1.Svc.SvcReflection.Descriptor.Services[2]; }
    }

    /// <summary>Base class for server-side implementations of CerbosPlaygroundService</summary>
    [grpc::BindServiceMethod(typeof(CerbosPlaygroundService), "BindService")]
    public abstract partial class CerbosPlaygroundServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cerbos.Api.V1.Response.PlaygroundValidateResponse> PlaygroundValidate(global::Cerbos.Api.V1.Request.PlaygroundValidateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cerbos.Api.V1.Response.PlaygroundTestResponse> PlaygroundTest(global::Cerbos.Api.V1.Request.PlaygroundTestRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cerbos.Api.V1.Response.PlaygroundEvaluateResponse> PlaygroundEvaluate(global::Cerbos.Api.V1.Request.PlaygroundEvaluateRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cerbos.Api.V1.Response.PlaygroundProxyResponse> PlaygroundProxy(global::Cerbos.Api.V1.Request.PlaygroundProxyRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for CerbosPlaygroundService</summary>
    public partial class CerbosPlaygroundServiceClient : grpc::ClientBase<CerbosPlaygroundServiceClient>
    {
      /// <summary>Creates a new client for CerbosPlaygroundService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public CerbosPlaygroundServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for CerbosPlaygroundService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public CerbosPlaygroundServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected CerbosPlaygroundServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected CerbosPlaygroundServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cerbos.Api.V1.Response.PlaygroundValidateResponse PlaygroundValidate(global::Cerbos.Api.V1.Request.PlaygroundValidateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PlaygroundValidate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cerbos.Api.V1.Response.PlaygroundValidateResponse PlaygroundValidate(global::Cerbos.Api.V1.Request.PlaygroundValidateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PlaygroundValidate, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cerbos.Api.V1.Response.PlaygroundValidateResponse> PlaygroundValidateAsync(global::Cerbos.Api.V1.Request.PlaygroundValidateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PlaygroundValidateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cerbos.Api.V1.Response.PlaygroundValidateResponse> PlaygroundValidateAsync(global::Cerbos.Api.V1.Request.PlaygroundValidateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PlaygroundValidate, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cerbos.Api.V1.Response.PlaygroundTestResponse PlaygroundTest(global::Cerbos.Api.V1.Request.PlaygroundTestRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PlaygroundTest(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cerbos.Api.V1.Response.PlaygroundTestResponse PlaygroundTest(global::Cerbos.Api.V1.Request.PlaygroundTestRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PlaygroundTest, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cerbos.Api.V1.Response.PlaygroundTestResponse> PlaygroundTestAsync(global::Cerbos.Api.V1.Request.PlaygroundTestRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PlaygroundTestAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cerbos.Api.V1.Response.PlaygroundTestResponse> PlaygroundTestAsync(global::Cerbos.Api.V1.Request.PlaygroundTestRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PlaygroundTest, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cerbos.Api.V1.Response.PlaygroundEvaluateResponse PlaygroundEvaluate(global::Cerbos.Api.V1.Request.PlaygroundEvaluateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PlaygroundEvaluate(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cerbos.Api.V1.Response.PlaygroundEvaluateResponse PlaygroundEvaluate(global::Cerbos.Api.V1.Request.PlaygroundEvaluateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PlaygroundEvaluate, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cerbos.Api.V1.Response.PlaygroundEvaluateResponse> PlaygroundEvaluateAsync(global::Cerbos.Api.V1.Request.PlaygroundEvaluateRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PlaygroundEvaluateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cerbos.Api.V1.Response.PlaygroundEvaluateResponse> PlaygroundEvaluateAsync(global::Cerbos.Api.V1.Request.PlaygroundEvaluateRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PlaygroundEvaluate, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cerbos.Api.V1.Response.PlaygroundProxyResponse PlaygroundProxy(global::Cerbos.Api.V1.Request.PlaygroundProxyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PlaygroundProxy(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cerbos.Api.V1.Response.PlaygroundProxyResponse PlaygroundProxy(global::Cerbos.Api.V1.Request.PlaygroundProxyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PlaygroundProxy, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cerbos.Api.V1.Response.PlaygroundProxyResponse> PlaygroundProxyAsync(global::Cerbos.Api.V1.Request.PlaygroundProxyRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PlaygroundProxyAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cerbos.Api.V1.Response.PlaygroundProxyResponse> PlaygroundProxyAsync(global::Cerbos.Api.V1.Request.PlaygroundProxyRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PlaygroundProxy, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override CerbosPlaygroundServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new CerbosPlaygroundServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(CerbosPlaygroundServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_PlaygroundValidate, serviceImpl.PlaygroundValidate)
          .AddMethod(__Method_PlaygroundTest, serviceImpl.PlaygroundTest)
          .AddMethod(__Method_PlaygroundEvaluate, serviceImpl.PlaygroundEvaluate)
          .AddMethod(__Method_PlaygroundProxy, serviceImpl.PlaygroundProxy).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, CerbosPlaygroundServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_PlaygroundValidate, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cerbos.Api.V1.Request.PlaygroundValidateRequest, global::Cerbos.Api.V1.Response.PlaygroundValidateResponse>(serviceImpl.PlaygroundValidate));
      serviceBinder.AddMethod(__Method_PlaygroundTest, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cerbos.Api.V1.Request.PlaygroundTestRequest, global::Cerbos.Api.V1.Response.PlaygroundTestResponse>(serviceImpl.PlaygroundTest));
      serviceBinder.AddMethod(__Method_PlaygroundEvaluate, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cerbos.Api.V1.Request.PlaygroundEvaluateRequest, global::Cerbos.Api.V1.Response.PlaygroundEvaluateResponse>(serviceImpl.PlaygroundEvaluate));
      serviceBinder.AddMethod(__Method_PlaygroundProxy, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cerbos.Api.V1.Request.PlaygroundProxyRequest, global::Cerbos.Api.V1.Response.PlaygroundProxyResponse>(serviceImpl.PlaygroundProxy));
    }

  }
}
#endregion
