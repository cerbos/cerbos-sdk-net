// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: cerbos/svc/v1/svc.proto
// </auto-generated>
// Original file comments:
// Copyright 2021-2025 Zenauth Ltd.
// SPDX-License-Identifier: Apache-2.0
//
#pragma warning disable 0414, 1591, 8981, 0612
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Cerbos.Api.V1.Svc {
  public static partial class CerbosService
  {
    static readonly string __ServiceName = "cerbos.svc.v1.CerbosService";

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static void __Helper_SerializeMessage(global::Google.Protobuf.IMessage message, grpc::SerializationContext context)
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (message is global::Google.Protobuf.IBufferMessage)
      {
        context.SetPayloadLength(message.CalculateSize());
        global::Google.Protobuf.MessageExtensions.WriteTo(message, context.GetBufferWriter());
        context.Complete();
        return;
      }
      #endif
      context.Complete(global::Google.Protobuf.MessageExtensions.ToByteArray(message));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static class __Helper_MessageCache<T>
    {
      public static readonly bool IsBufferMessage = global::System.Reflection.IntrospectionExtensions.GetTypeInfo(typeof(global::Google.Protobuf.IBufferMessage)).IsAssignableFrom(typeof(T));
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static T __Helper_DeserializeMessage<T>(grpc::DeserializationContext context, global::Google.Protobuf.MessageParser<T> parser) where T : global::Google.Protobuf.IMessage<T>
    {
      #if !GRPC_DISABLE_PROTOBUF_BUFFER_SERIALIZATION
      if (__Helper_MessageCache<T>.IsBufferMessage)
      {
        return parser.ParseFrom(context.PayloadAsReadOnlySequence());
      }
      #endif
      return parser.ParseFrom(context.PayloadAsNewBuffer());
    }

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cerbos.Api.V1.Request.CheckResourceSetRequest> __Marshaller_cerbos_request_v1_CheckResourceSetRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cerbos.Api.V1.Request.CheckResourceSetRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cerbos.Api.V1.Response.CheckResourceSetResponse> __Marshaller_cerbos_response_v1_CheckResourceSetResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cerbos.Api.V1.Response.CheckResourceSetResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cerbos.Api.V1.Request.CheckResourceBatchRequest> __Marshaller_cerbos_request_v1_CheckResourceBatchRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cerbos.Api.V1.Request.CheckResourceBatchRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cerbos.Api.V1.Response.CheckResourceBatchResponse> __Marshaller_cerbos_response_v1_CheckResourceBatchResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cerbos.Api.V1.Response.CheckResourceBatchResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cerbos.Api.V1.Request.CheckResourcesRequest> __Marshaller_cerbos_request_v1_CheckResourcesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cerbos.Api.V1.Request.CheckResourcesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cerbos.Api.V1.Response.CheckResourcesResponse> __Marshaller_cerbos_response_v1_CheckResourcesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cerbos.Api.V1.Response.CheckResourcesResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cerbos.Api.V1.Request.ServerInfoRequest> __Marshaller_cerbos_request_v1_ServerInfoRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cerbos.Api.V1.Request.ServerInfoRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cerbos.Api.V1.Response.ServerInfoResponse> __Marshaller_cerbos_response_v1_ServerInfoResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cerbos.Api.V1.Response.ServerInfoResponse.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cerbos.Api.V1.Request.PlanResourcesRequest> __Marshaller_cerbos_request_v1_PlanResourcesRequest = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cerbos.Api.V1.Request.PlanResourcesRequest.Parser));
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Marshaller<global::Cerbos.Api.V1.Response.PlanResourcesResponse> __Marshaller_cerbos_response_v1_PlanResourcesResponse = grpc::Marshallers.Create(__Helper_SerializeMessage, context => __Helper_DeserializeMessage(context, global::Cerbos.Api.V1.Response.PlanResourcesResponse.Parser));

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cerbos.Api.V1.Request.CheckResourceSetRequest, global::Cerbos.Api.V1.Response.CheckResourceSetResponse> __Method_CheckResourceSet = new grpc::Method<global::Cerbos.Api.V1.Request.CheckResourceSetRequest, global::Cerbos.Api.V1.Response.CheckResourceSetResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CheckResourceSet",
        __Marshaller_cerbos_request_v1_CheckResourceSetRequest,
        __Marshaller_cerbos_response_v1_CheckResourceSetResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cerbos.Api.V1.Request.CheckResourceBatchRequest, global::Cerbos.Api.V1.Response.CheckResourceBatchResponse> __Method_CheckResourceBatch = new grpc::Method<global::Cerbos.Api.V1.Request.CheckResourceBatchRequest, global::Cerbos.Api.V1.Response.CheckResourceBatchResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CheckResourceBatch",
        __Marshaller_cerbos_request_v1_CheckResourceBatchRequest,
        __Marshaller_cerbos_response_v1_CheckResourceBatchResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cerbos.Api.V1.Request.CheckResourcesRequest, global::Cerbos.Api.V1.Response.CheckResourcesResponse> __Method_CheckResources = new grpc::Method<global::Cerbos.Api.V1.Request.CheckResourcesRequest, global::Cerbos.Api.V1.Response.CheckResourcesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "CheckResources",
        __Marshaller_cerbos_request_v1_CheckResourcesRequest,
        __Marshaller_cerbos_response_v1_CheckResourcesResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cerbos.Api.V1.Request.ServerInfoRequest, global::Cerbos.Api.V1.Response.ServerInfoResponse> __Method_ServerInfo = new grpc::Method<global::Cerbos.Api.V1.Request.ServerInfoRequest, global::Cerbos.Api.V1.Response.ServerInfoResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ServerInfo",
        __Marshaller_cerbos_request_v1_ServerInfoRequest,
        __Marshaller_cerbos_response_v1_ServerInfoResponse);

    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    static readonly grpc::Method<global::Cerbos.Api.V1.Request.PlanResourcesRequest, global::Cerbos.Api.V1.Response.PlanResourcesResponse> __Method_PlanResources = new grpc::Method<global::Cerbos.Api.V1.Request.PlanResourcesRequest, global::Cerbos.Api.V1.Response.PlanResourcesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "PlanResources",
        __Marshaller_cerbos_request_v1_PlanResourcesRequest,
        __Marshaller_cerbos_response_v1_PlanResourcesResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Cerbos.Api.V1.Svc.SvcReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of CerbosService</summary>
    [grpc::BindServiceMethod(typeof(CerbosService), "BindService")]
    public abstract partial class CerbosServiceBase
    {
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cerbos.Api.V1.Response.CheckResourceSetResponse> CheckResourceSet(global::Cerbos.Api.V1.Request.CheckResourceSetRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cerbos.Api.V1.Response.CheckResourceBatchResponse> CheckResourceBatch(global::Cerbos.Api.V1.Request.CheckResourceBatchRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cerbos.Api.V1.Response.CheckResourcesResponse> CheckResources(global::Cerbos.Api.V1.Request.CheckResourcesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cerbos.Api.V1.Response.ServerInfoResponse> ServerInfo(global::Cerbos.Api.V1.Request.ServerInfoRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::System.Threading.Tasks.Task<global::Cerbos.Api.V1.Response.PlanResourcesResponse> PlanResources(global::Cerbos.Api.V1.Request.PlanResourcesRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Client for CerbosService</summary>
    public partial class CerbosServiceClient : grpc::ClientBase<CerbosServiceClient>
    {
      /// <summary>Creates a new client for CerbosService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public CerbosServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for CerbosService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public CerbosServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected CerbosServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected CerbosServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cerbos.Api.V1.Response.CheckResourceSetResponse CheckResourceSet(global::Cerbos.Api.V1.Request.CheckResourceSetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CheckResourceSet(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cerbos.Api.V1.Response.CheckResourceSetResponse CheckResourceSet(global::Cerbos.Api.V1.Request.CheckResourceSetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CheckResourceSet, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cerbos.Api.V1.Response.CheckResourceSetResponse> CheckResourceSetAsync(global::Cerbos.Api.V1.Request.CheckResourceSetRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CheckResourceSetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cerbos.Api.V1.Response.CheckResourceSetResponse> CheckResourceSetAsync(global::Cerbos.Api.V1.Request.CheckResourceSetRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CheckResourceSet, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cerbos.Api.V1.Response.CheckResourceBatchResponse CheckResourceBatch(global::Cerbos.Api.V1.Request.CheckResourceBatchRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CheckResourceBatch(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cerbos.Api.V1.Response.CheckResourceBatchResponse CheckResourceBatch(global::Cerbos.Api.V1.Request.CheckResourceBatchRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CheckResourceBatch, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cerbos.Api.V1.Response.CheckResourceBatchResponse> CheckResourceBatchAsync(global::Cerbos.Api.V1.Request.CheckResourceBatchRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CheckResourceBatchAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cerbos.Api.V1.Response.CheckResourceBatchResponse> CheckResourceBatchAsync(global::Cerbos.Api.V1.Request.CheckResourceBatchRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CheckResourceBatch, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cerbos.Api.V1.Response.CheckResourcesResponse CheckResources(global::Cerbos.Api.V1.Request.CheckResourcesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CheckResources(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cerbos.Api.V1.Response.CheckResourcesResponse CheckResources(global::Cerbos.Api.V1.Request.CheckResourcesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_CheckResources, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cerbos.Api.V1.Response.CheckResourcesResponse> CheckResourcesAsync(global::Cerbos.Api.V1.Request.CheckResourcesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CheckResourcesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cerbos.Api.V1.Response.CheckResourcesResponse> CheckResourcesAsync(global::Cerbos.Api.V1.Request.CheckResourcesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_CheckResources, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cerbos.Api.V1.Response.ServerInfoResponse ServerInfo(global::Cerbos.Api.V1.Request.ServerInfoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ServerInfo(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cerbos.Api.V1.Response.ServerInfoResponse ServerInfo(global::Cerbos.Api.V1.Request.ServerInfoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ServerInfo, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cerbos.Api.V1.Response.ServerInfoResponse> ServerInfoAsync(global::Cerbos.Api.V1.Request.ServerInfoRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ServerInfoAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cerbos.Api.V1.Response.ServerInfoResponse> ServerInfoAsync(global::Cerbos.Api.V1.Request.ServerInfoRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ServerInfo, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cerbos.Api.V1.Response.PlanResourcesResponse PlanResources(global::Cerbos.Api.V1.Request.PlanResourcesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PlanResources(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual global::Cerbos.Api.V1.Response.PlanResourcesResponse PlanResources(global::Cerbos.Api.V1.Request.PlanResourcesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_PlanResources, null, options, request);
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cerbos.Api.V1.Response.PlanResourcesResponse> PlanResourcesAsync(global::Cerbos.Api.V1.Request.PlanResourcesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return PlanResourcesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      public virtual grpc::AsyncUnaryCall<global::Cerbos.Api.V1.Response.PlanResourcesResponse> PlanResourcesAsync(global::Cerbos.Api.V1.Request.PlanResourcesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_PlanResources, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
      protected override CerbosServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new CerbosServiceClient(configuration);
      }
    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static grpc::ServerServiceDefinition BindService(CerbosServiceBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_CheckResourceSet, serviceImpl.CheckResourceSet)
          .AddMethod(__Method_CheckResourceBatch, serviceImpl.CheckResourceBatch)
          .AddMethod(__Method_CheckResources, serviceImpl.CheckResources)
          .AddMethod(__Method_ServerInfo, serviceImpl.ServerInfo)
          .AddMethod(__Method_PlanResources, serviceImpl.PlanResources).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    [global::System.CodeDom.Compiler.GeneratedCode("grpc_csharp_plugin", null)]
    public static void BindService(grpc::ServiceBinderBase serviceBinder, CerbosServiceBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_CheckResourceSet, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cerbos.Api.V1.Request.CheckResourceSetRequest, global::Cerbos.Api.V1.Response.CheckResourceSetResponse>(serviceImpl.CheckResourceSet));
      serviceBinder.AddMethod(__Method_CheckResourceBatch, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cerbos.Api.V1.Request.CheckResourceBatchRequest, global::Cerbos.Api.V1.Response.CheckResourceBatchResponse>(serviceImpl.CheckResourceBatch));
      serviceBinder.AddMethod(__Method_CheckResources, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cerbos.Api.V1.Request.CheckResourcesRequest, global::Cerbos.Api.V1.Response.CheckResourcesResponse>(serviceImpl.CheckResources));
      serviceBinder.AddMethod(__Method_ServerInfo, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cerbos.Api.V1.Request.ServerInfoRequest, global::Cerbos.Api.V1.Response.ServerInfoResponse>(serviceImpl.ServerInfo));
      serviceBinder.AddMethod(__Method_PlanResources, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::Cerbos.Api.V1.Request.PlanResourcesRequest, global::Cerbos.Api.V1.Response.PlanResourcesResponse>(serviceImpl.PlanResources));
    }

  }
}
#endregion
